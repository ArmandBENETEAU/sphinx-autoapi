

Controller Class
================



.. contents:: 
   :local:



Summary
-------

Base class for an MVC controller.





Inheritance Hierarchy
---------------------
* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNet.Mvc.Controller`





Syntax
------

.. code-block:: csharp

   public abstract class Controller : IActionFilter, IAsyncActionFilter, IFilter, IDisposable



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.Extensions/Controller.cs>`_





.. dn:class:: Microsoft.AspNet.Mvc.Controller


Properties
----------

.. dn:class:: Microsoft.AspNet.Mvc.Controller
    :noindex:
    :hidden:

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.ActionContext
    
        
    
        Gets or sets the [Microsoft.AspNet.Mvc.ActionContext]() object.
    
        
        :rtype: Microsoft.AspNet.Mvc.ActionContext
    
        
        .. code-block:: csharp
    
           public ActionContext ActionContext { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.BindingContext
    
        
    
        Gets or sets the [Microsoft.AspNet.Mvc.ActionBindingContext]().
    
        
        :rtype: Microsoft.AspNet.Mvc.ActionBindingContext
    
        
        .. code-block:: csharp
    
           public ActionBindingContext BindingContext { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.Context
    
        
    
        Gets the @!:HttpContext- for the executing action.
    
        
        :rtype: HttpContext
    
        
        .. code-block:: csharp
    
           public HttpContext Context { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.MetadataProvider
    
        
    
        Gets or sets the [Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider]().
    
        
        :rtype: Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider
    
        
        .. code-block:: csharp
    
           public IModelMetadataProvider MetadataProvider { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.ModelState
    
        
    
        Gets the [Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary]() that contains the state of the model and of model-binding validation.
    
        
        :rtype: Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary
    
        
        .. code-block:: csharp
    
           public ModelStateDictionary ModelState { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.ObjectValidator
    
        
        :rtype: Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator
    
        
        .. code-block:: csharp
    
           public IObjectModelValidator ObjectValidator { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.Request
    
        
    
        Gets the @!:HttpRequest- for the executing action.
    
        
        :rtype: HttpRequest
    
        
        .. code-block:: csharp
    
           public HttpRequest Request { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.Resolver
    
        
    
        Gets the request-specific [System.IServiceProvider]().
    
        
        :rtype: System.IServiceProvider
    
        
        .. code-block:: csharp
    
           public IServiceProvider Resolver { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.Response
    
        
    
        Gets the @!:HttpResponse- for the executing action.
    
        
        :rtype: HttpResponse
    
        
        .. code-block:: csharp
    
           public HttpResponse Response { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.RouteData
    
        
    
        Gets the @!:AspNet.Routing.RouteData- for the executing action.
    
        
        :rtype: RouteData
    
        
        .. code-block:: csharp
    
           public RouteData RouteData { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.TempData
    
        
    
        Gets or sets [Microsoft.AspNet.Mvc.ITempDataDictionary]() used by [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml).
    
        
        :rtype: Microsoft.AspNet.Mvc.ITempDataDictionary
    
        
        .. code-block:: csharp
    
           public ITempDataDictionary TempData { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.Url
    
        
    
        Gets or sets the [Microsoft.AspNet.Mvc.IUrlHelper]().
    
        
        :rtype: Microsoft.AspNet.Mvc.IUrlHelper
    
        
        .. code-block:: csharp
    
           public IUrlHelper Url { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.User
    
        
    
        Gets or sets the [System.Security.Claims.ClaimsPrincipal]() for user associated with the executing action.
    
        
        :rtype: System.Security.Claims.ClaimsPrincipal
    
        
        .. code-block:: csharp
    
           public ClaimsPrincipal User { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.ViewBag
    
        
    
        Gets the dynamic view bag.
    
        
        :rtype: dynamic
    
        
        .. code-block:: csharp
    
           public ViewBag { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Controller.ViewData
    
        
    
        Gets or sets [Microsoft.AspNet.Mvc.ViewDataDictionary](Microsoft.AspNet.Mvc.ViewDataDictionary.yml) used by [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) and [Microsoft.AspNet.Mvc.Controller.ViewBag](Microsoft.AspNet.Mvc.Controller.yml).
    
        
        :rtype: Microsoft.AspNet.Mvc.ViewDataDictionary
    
        
        .. code-block:: csharp
    
           public ViewDataDictionary ViewData { get; set; }


Methods
-------

.. dn:class:: Microsoft.AspNet.Mvc.Controller
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Content(System.String)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object by specifying a
        <paramref name="content" /> string.
    
        
        :param content: The content to write to the response.
        :type content: System.String
        :rtype: Microsoft.AspNet.Mvc.ContentResult
        :return: The created [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ContentResult Content(string content)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Content(System.String, MediaTypeHeaderValue)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object by specifying a
        <paramref name="content" />
        string and a
        <paramref name="contentType" />.
    
        
        :param content: The content to write to the response.
        :type content: System.String
        :param contentType: The content type (MIME type).
        :type contentType: MediaTypeHeaderValue
        :rtype: Microsoft.AspNet.Mvc.ContentResult
        :return: The created [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ContentResult Content(string content, MediaTypeHeaderValue contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Content(System.String, System.String)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object by specifying a
        <paramref name="content" /> string
        and a content type.
    
        
        :param content: The content to write to the response.
        :type content: System.String
        :param contentType: The content type (MIME type).
        :type contentType: System.String
        :rtype: Microsoft.AspNet.Mvc.ContentResult
        :return: The created [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ContentResult Content(string content, string contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Content(System.String, System.String, System.Text.Encoding)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object by specifying a
        <paramref name="content" /> string,
        a
        <paramref name="contentType" />, and
        <paramref name="contentEncoding" />.
    
        
        :param content: The content to write to the response.
        :type content: System.String
        :param contentType: The content type (MIME type).
        :type contentType: System.String
        :param contentEncoding: The content encoding.
        :type contentEncoding: System.Text.Encoding
        :rtype: Microsoft.AspNet.Mvc.ContentResult
        :return: The created [Microsoft.AspNet.Mvc.ContentResult](Microsoft.AspNet.Mvc.ContentResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ContentResult Content(string content, string contentType, Encoding contentEncoding)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Created(System.String, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedResult](Microsoft.AspNet.Mvc.CreatedResult.yml) object that produces a Created (201) response.
    
        
        :param uri: The URI at which the content has been created.
        :type uri: System.String
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedResult](Microsoft.AspNet.Mvc.CreatedResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedResult Created(string uri, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Created(System.Uri, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedResult](Microsoft.AspNet.Mvc.CreatedResult.yml) object that produces a Created (201) response.
    
        
        :param uri: The URI at which the content has been created.
        :type uri: System.Uri
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedResult](Microsoft.AspNet.Mvc.CreatedResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedResult Created(Uri uri, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.CreatedAtAction(System.String, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedAtActionResult](Microsoft.AspNet.Mvc.CreatedAtActionResult.yml) object that produces a Created (201) response.
    
        
        :param actionName: The name of the action to use for generating the URL.
        :type actionName: System.String
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedAtActionResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedAtActionResult CreatedAtAction(string actionName, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.CreatedAtAction(System.String, System.Object, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedAtActionResult](Microsoft.AspNet.Mvc.CreatedAtActionResult.yml) object that produces a Created (201) response.
    
        
        :param actionName: The name of the action to use for generating the URL.
        :type actionName: System.String
        :param routeValues: The route data to use for generating the URL.
        :type routeValues: System.Object
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedAtActionResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedAtActionResult CreatedAtAction(string actionName, object routeValues, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.CreatedAtAction(System.String, System.String, System.Object, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedAtActionResult](Microsoft.AspNet.Mvc.CreatedAtActionResult.yml) object that produces a Created (201) response.
    
        
        :param actionName: The name of the action to use for generating the URL.
        :type actionName: System.String
        :param controllerName: The name of the controller to use for generating the URL.
        :type controllerName: System.String
        :param routeValues: The route data to use for generating the URL.
        :type routeValues: System.Object
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedAtActionResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedAtActionResult CreatedAtAction(string actionName, string controllerName, object routeValues, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.CreatedAtRoute(System.Object, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) object that produces a Created (201) response.
    
        
        :param routeValues: The route data to use for generating the URL.
        :type routeValues: System.Object
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedAtRouteResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedAtRouteResult CreatedAtRoute(object routeValues, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.CreatedAtRoute(System.String, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) object that produces a Created (201) response.
    
        
        :param routeName: The name of the route to use for generating the URL.
        :type routeName: System.String
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedAtRouteResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.CreatedAtRoute(System.String, System.Object, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) object that produces a Created (201) response.
    
        
        :param routeName: The name of the route to use for generating the URL.
        :type routeName: System.String
        :param routeValues: The route data to use for generating the URL.
        :type routeValues: System.Object
        :param value: The content value to format in the entity body.
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.CreatedAtRouteResult
        :return: The created [Microsoft.AspNet.Mvc.CreatedAtRouteResult](Microsoft.AspNet.Mvc.CreatedAtRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object routeValues, object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Dispose()
    
        
    
        
        .. code-block:: csharp
    
           public void Dispose()

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Dispose(System.Boolean)
    
        
    
        Releases all resources currently used by this [Microsoft.AspNet.Mvc.Controller](Microsoft.AspNet.Mvc.Controller.yml) instance.
    
        
        :param disposing: <c>true</c> if this method is being invoked by the [Microsoft.AspNet.Mvc.Controller.Dispose](Microsoft.AspNet.Mvc.Controller.yml) method,
    otherwise
    <c>false</c>.
        :type disposing: System.Boolean
    
        
        .. code-block:: csharp
    
           protected virtual void Dispose(bool disposing)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.File(System.Byte[], System.String)
    
        
    
        Returns a file with the specified
        <paramref name="fileContents" /> as content and the
        specified
        <paramref name="contentType" /> as the Content-Type.
    
        
        :param fileContents: The file contents.
        :type fileContents: System.Byte[]
        :param contentType: The Content-Type of the file.
        :type contentType: System.String
        :rtype: Microsoft.AspNet.Mvc.FileContentResult
        :return: The created [Microsoft.AspNet.Mvc.FileContentResult](Microsoft.AspNet.Mvc.FileContentResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual FileContentResult File(byte[] fileContents, string contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.File(System.Byte[], System.String, System.String)
    
        
    
        Returns a file with the specified
        <paramref name="fileContents" /> as content, the
        specified
        <paramref name="contentType" /> as the Content-Type and the
        specified
        <paramref name="fileDownloadName" /> as the suggested file name.
    
        
        :param fileContents: The file contents.
        :type fileContents: System.Byte[]
        :param contentType: The Content-Type of the file.
        :type contentType: System.String
        :param fileDownloadName: The suggested file name.
        :type fileDownloadName: System.String
        :rtype: Microsoft.AspNet.Mvc.FileContentResult
        :return: The created [Microsoft.AspNet.Mvc.FileContentResult](Microsoft.AspNet.Mvc.FileContentResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual FileContentResult File(byte[] fileContents, string contentType, string fileDownloadName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.File(System.IO.Stream, System.String)
    
        
    
        Returns a file in the specified
        <paramref name="fileStream" /> with the
        specified
        <paramref name="contentType" /> as the Content-Type.
    
        
        :param fileStream: The [System.IO.Stream]() with the contents of the file.
        :type fileStream: System.IO.Stream
        :param contentType: The Content-Type of the file.
        :type contentType: System.String
        :rtype: Microsoft.AspNet.Mvc.FileStreamResult
        :return: The created [Microsoft.AspNet.Mvc.FileStreamResult](Microsoft.AspNet.Mvc.FileStreamResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual FileStreamResult File(Stream fileStream, string contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.File(System.IO.Stream, System.String, System.String)
    
        
    
        Returns a file in the specified
        <paramref name="fileStream" /> with the
        specified
        <paramref name="contentType" /> as the Content-Type and the
        specified
        <paramref name="fileDownloadName" /> as the suggested file name.
    
        
        :param fileStream: The [System.IO.Stream]() with the contents of the file.
        :type fileStream: System.IO.Stream
        :param contentType: The Content-Type of the file.
        :type contentType: System.String
        :param fileDownloadName: The suggested file name.
        :type fileDownloadName: System.String
        :rtype: Microsoft.AspNet.Mvc.FileStreamResult
        :return: The created [Microsoft.AspNet.Mvc.FileStreamResult](Microsoft.AspNet.Mvc.FileStreamResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual FileStreamResult File(Stream fileStream, string contentType, string fileDownloadName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.File(System.String, System.String)
    
        
    
        Returns the file specified by
        <paramref name="fileName" /> with the
        specified
        <paramref name="contentType" /> as the Content-Type.
    
        
        :param fileName: The [System.IO.Stream]() with the contents of the file.
        :type fileName: System.String
        :param contentType: The Content-Type of the file.
        :type contentType: System.String
        :rtype: Microsoft.AspNet.Mvc.FilePathResult
        :return: The created [Microsoft.AspNet.Mvc.FilePathResult](Microsoft.AspNet.Mvc.FilePathResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual FilePathResult File(string fileName, string contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.File(System.String, System.String, System.String)
    
        
    
        Returns the file specified by
        <paramref name="fileName" /> with the
        specified
        <paramref name="contentType" /> as the Content-Type and the
        specified
        <paramref name="fileDownloadName" /> as the suggested file name.
    
        
        :param fileName: The [System.IO.Stream]() with the contents of the file.
        :type fileName: System.String
        :param contentType: The Content-Type of the file.
        :type contentType: System.String
        :param fileDownloadName: The suggested file name.
        :type fileDownloadName: System.String
        :rtype: Microsoft.AspNet.Mvc.FilePathResult
        :return: The created [Microsoft.AspNet.Mvc.FilePathResult](Microsoft.AspNet.Mvc.FilePathResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual FilePathResult File(string fileName, string contentType, string fileDownloadName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.HttpBadRequest()
    
        
    
        Creates an [Microsoft.AspNet.Mvc.BadRequestResult](Microsoft.AspNet.Mvc.BadRequestResult.yml) that produces a Bad Request (400) response.
    
        
        :rtype: Microsoft.AspNet.Mvc.BadRequestResult
        :return: The created [Microsoft.AspNet.Mvc.BadRequestResult](Microsoft.AspNet.Mvc.BadRequestResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual BadRequestResult HttpBadRequest()

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.HttpBadRequest(Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary)
    
        
    
        Creates an [Microsoft.AspNet.Mvc.BadRequestObjectResult](Microsoft.AspNet.Mvc.BadRequestObjectResult.yml) that produces a Bad Request (400) response.
    
        
        :param modelState: 
        :type modelState: Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary
        :rtype: Microsoft.AspNet.Mvc.BadRequestObjectResult
        :return: The created [Microsoft.AspNet.Mvc.BadRequestObjectResult](Microsoft.AspNet.Mvc.BadRequestObjectResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual BadRequestObjectResult HttpBadRequest(ModelStateDictionary modelState)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.HttpBadRequest(System.Object)
    
        
    
        Creates an [Microsoft.AspNet.Mvc.BadRequestObjectResult](Microsoft.AspNet.Mvc.BadRequestObjectResult.yml) that produces a Bad Request (400) response.
    
        
        :param error: 
        :type error: System.Object
        :rtype: Microsoft.AspNet.Mvc.BadRequestObjectResult
        :return: The created [Microsoft.AspNet.Mvc.BadRequestObjectResult](Microsoft.AspNet.Mvc.BadRequestObjectResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual BadRequestObjectResult HttpBadRequest(object error)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.HttpNotFound()
    
        
    
        Creates an [Microsoft.AspNet.Mvc.HttpNotFoundResult](Microsoft.AspNet.Mvc.HttpNotFoundResult.yml) that produces a Not Found (404) response.
    
        
        :rtype: Microsoft.AspNet.Mvc.HttpNotFoundResult
        :return: The created [Microsoft.AspNet.Mvc.HttpNotFoundResult](Microsoft.AspNet.Mvc.HttpNotFoundResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual HttpNotFoundResult HttpNotFound()

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.HttpNotFound(System.Object)
    
        
    
        Creates an [Microsoft.AspNet.Mvc.HttpNotFoundObjectResult](Microsoft.AspNet.Mvc.HttpNotFoundObjectResult.yml) that produces a Not Found (404) response.
    
        
        :param value: 
        :type value: System.Object
        :rtype: Microsoft.AspNet.Mvc.HttpNotFoundObjectResult
        :return: The created [Microsoft.AspNet.Mvc.HttpNotFoundObjectResult](Microsoft.AspNet.Mvc.HttpNotFoundObjectResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual HttpNotFoundObjectResult HttpNotFound(object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.HttpUnauthorized()
    
        
    
        Creates an [Microsoft.AspNet.Mvc.HttpUnauthorizedResult](Microsoft.AspNet.Mvc.HttpUnauthorizedResult.yml) that produces an Unauthorized (401) response.
    
        
        :rtype: Microsoft.AspNet.Mvc.HttpUnauthorizedResult
        :return: The created [Microsoft.AspNet.Mvc.HttpUnauthorizedResult](Microsoft.AspNet.Mvc.HttpUnauthorizedResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual HttpUnauthorizedResult HttpUnauthorized()

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Json(System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.JsonResult](Microsoft.AspNet.Mvc.JsonResult.yml) object that serializes the specified
        <paramref name="data" /> object
        to JSON.
    
        
        :param data: The object to serialize.
        :type data: System.Object
        :rtype: Microsoft.AspNet.Mvc.JsonResult
        :return: The created [Microsoft.AspNet.Mvc.JsonResult](Microsoft.AspNet.Mvc.JsonResult.yml) that serializes the specified
    <paramref name="data" />
    to JSON format for the response.
    
        
        .. code-block:: csharp
    
           public virtual JsonResult Json(object data)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Json(System.Object, JsonSerializerSettings)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.JsonResult](Microsoft.AspNet.Mvc.JsonResult.yml) object that serializes the specified
        <paramref name="data" /> object
        to JSON.
    
        
        :param data: The object to serialize.
        :type data: System.Object
        :param serializerSettings: The @!:JsonSerializerSettings- to be used by
    the formatter.
        :type serializerSettings: JsonSerializerSettings
        :rtype: Microsoft.AspNet.Mvc.JsonResult
        :return: The created [Microsoft.AspNet.Mvc.JsonResult](Microsoft.AspNet.Mvc.JsonResult.yml) that serializes the specified
    <paramref name="data" />
    as JSON format for the response.
    
        
        .. code-block:: csharp
    
           public virtual JsonResult Json(object data, JsonSerializerSettings serializerSettings)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.OnActionExecuted(Microsoft.AspNet.Mvc.ActionExecutedContext)
    
        
    
        Called after the action method is invoked.
    
        
        :param context: The action executed context.
        :type context: Microsoft.AspNet.Mvc.ActionExecutedContext
    
        
        .. code-block:: csharp
    
           public virtual void OnActionExecuted(ActionExecutedContext context)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.OnActionExecuting(Microsoft.AspNet.Mvc.ActionExecutingContext)
    
        
    
        Called before the action method is invoked.
    
        
        :param context: The action executing context.
        :type context: Microsoft.AspNet.Mvc.ActionExecutingContext
    
        
        .. code-block:: csharp
    
           public virtual void OnActionExecuting(ActionExecutingContext context)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNet.Mvc.ActionExecutingContext, Microsoft.AspNet.Mvc.ActionExecutionDelegate)
    
        
    
        Called before the action method is invoked.
    
        
        :param context: The action executing context.
        :type context: Microsoft.AspNet.Mvc.ActionExecutingContext
        :param next: The [Microsoft.AspNet.Mvc.ActionExecutionDelegate]() to execute. Invoke this delegate in the body
    of [Microsoft.AspNet.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNet.Mvc.ActionExecutingContext,Microsoft.AspNet.Mvc.ActionExecutionDelegate)](Microsoft.AspNet.Mvc.Controller.yml) to continue execution of the action.
        :type next: Microsoft.AspNet.Mvc.ActionExecutionDelegate
        :rtype: System.Threading.Tasks.Task
        :return: A [System.Threading.Tasks.Task]() instance.
    
        
        .. code-block:: csharp
    
           public virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.PartialView()
    
        
    
        Creates a [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object that renders a partial view to the response.
    
        
        :rtype: Microsoft.AspNet.Mvc.PartialViewResult
        :return: The created [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual PartialViewResult PartialView()

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.PartialView(System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object by specifying a
        <paramref name="model" />
        to be rendered by the partial view.
    
        
        :param model: The model that is rendered by the partial view.
        :type model: System.Object
        :rtype: Microsoft.AspNet.Mvc.PartialViewResult
        :return: The created [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual PartialViewResult PartialView(object model)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.PartialView(System.String)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object by specifying a
        <paramref name="viewName" />.
    
        
        :param viewName: The name of the view that is rendered to the response.
        :type viewName: System.String
        :rtype: Microsoft.AspNet.Mvc.PartialViewResult
        :return: The created [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual PartialViewResult PartialView(string viewName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.PartialView(System.String, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object by specifying a
        <paramref name="viewName" />
        and the
        <paramref name="model" /> to be rendered by the partial view.
    
        
        :param viewName: The name of the partial view that is rendered to the response.
        :type viewName: System.String
        :param model: The model that is rendered by the partial view.
        :type model: System.Object
        :rtype: Microsoft.AspNet.Mvc.PartialViewResult
        :return: The created [Microsoft.AspNet.Mvc.PartialViewResult](Microsoft.AspNet.Mvc.PartialViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual PartialViewResult PartialView(string viewName, object model)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.Redirect(System.String)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.RedirectResult](Microsoft.AspNet.Mvc.RedirectResult.yml) object that redirects to the specified
        <paramref name="url" />.
    
        
        :param url: The URL to redirect to.
        :type url: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectResult](Microsoft.AspNet.Mvc.RedirectResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectResult Redirect(string url)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectPermanent(System.String)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.RedirectResult](Microsoft.AspNet.Mvc.RedirectResult.yml) object with [Microsoft.AspNet.Mvc.RedirectResult.Permanent](Microsoft.AspNet.Mvc.RedirectResult.yml) set to true
        using the specified
        <paramref name="url" />.
    
        
        :param url: The URL to redirect to.
        :type url: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectResult](Microsoft.AspNet.Mvc.RedirectResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectResult RedirectPermanent(string url)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToAction(System.String)
    
        
    
        Redirects to the specified action using the
        <paramref name="actionName" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToAction(string actionName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToAction(System.String, System.Object)
    
        
    
        Redirects to the specified action using the
        <paramref name="actionName" />
        and
        <paramref name="routeValues" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToAction(string actionName, object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToAction(System.String, System.String)
    
        
    
        Redirects to the specified action using the
        <paramref name="actionName" />
        and the
        <paramref name="controllerName" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :param controllerName: The name of the controller.
        :type controllerName: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToAction(System.String, System.String, System.Object)
    
        
    
        Redirects to the specified action using the specified
        <paramref name="actionName" />,
        
        <paramref name="controllerName" />, and
        <paramref name="routeValues" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :param controllerName: The name of the controller.
        :type controllerName: System.String
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName, object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToActionPermanent(System.String)
    
        
    
        Redirects to the specified action with [Microsoft.AspNet.Mvc.RedirectToActionResult.Permanent](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) set to true
        using the specified
        <paramref name="actionName" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToActionPermanent(string actionName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToActionPermanent(System.String, System.Object)
    
        
    
        Redirects to the specified action with [Microsoft.AspNet.Mvc.RedirectToActionResult.Permanent](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) set to true
        using the specified
        <paramref name="actionName" /> and
        <paramref name="routeValues" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToActionPermanent(System.String, System.String)
    
        
    
        Redirects to the specified action with [Microsoft.AspNet.Mvc.RedirectToActionResult.Permanent](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) set to true
        using the specified
        <paramref name="actionName" /> and
        <paramref name="controllerName" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :param controllerName: The name of the controller.
        :type controllerName: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToActionPermanent(System.String, System.String, System.Object)
    
        
    
        Redirects to the specified action with [Microsoft.AspNet.Mvc.RedirectToActionResult.Permanent](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) set to true
        using the specified
        <paramref name="actionName" />,
        <paramref name="controllerName" />,
        and
        <paramref name="routeValues" />.
    
        
        :param actionName: The name of the action.
        :type actionName: System.String
        :param controllerName: The name of the controller.
        :type controllerName: System.String
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToActionResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToActionResult](Microsoft.AspNet.Mvc.RedirectToActionResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName, object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToRoute(System.Object)
    
        
    
        Redirects to the specified route using the specified
        <paramref name="routeValues" />.
    
        
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToRouteResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToRouteResult](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToRouteResult RedirectToRoute(object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToRoute(System.String)
    
        
    
        Redirects to the specified route using the specified
        <paramref name="routeName" />.
    
        
        :param routeName: The name of the route.
        :type routeName: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectToRouteResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToRouteResult](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToRouteResult RedirectToRoute(string routeName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToRoute(System.String, System.Object)
    
        
    
        Redirects to the specified route using the specified
        <paramref name="routeName" />
        and
        <paramref name="routeValues" />.
    
        
        :param routeName: The name of the route.
        :type routeName: System.String
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToRouteResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToRouteResult](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToRouteResult RedirectToRoute(string routeName, object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    
        
    
        Redirects to the specified route with [Microsoft.AspNet.Mvc.RedirectToRouteResult.Permanent](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) set to true
        using the specified
        <paramref name="routeValues" />.
    
        
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToRouteResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToRouteResult](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToRouteResult RedirectToRoutePermanent(object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToRoutePermanent(System.String)
    
        
    
        Redirects to the specified route with [Microsoft.AspNet.Mvc.RedirectToRouteResult.Permanent](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) set to true
        using the specified
        <paramref name="routeName" />.
    
        
        :param routeName: The name of the route.
        :type routeName: System.String
        :rtype: Microsoft.AspNet.Mvc.RedirectToRouteResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToRouteResult](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.RedirectToRoutePermanent(System.String, System.Object)
    
        
    
        Redirects to the specified route with [Microsoft.AspNet.Mvc.RedirectToRouteResult.Permanent](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) set to true
        using the specified
        <paramref name="routeName" /> and
        <paramref name="routeValues" />.
    
        
        :param routeName: The name of the route.
        :type routeName: System.String
        :param routeValues: The parameters for a route.
        :type routeValues: System.Object
        :rtype: Microsoft.AspNet.Mvc.RedirectToRouteResult
        :return: The created [Microsoft.AspNet.Mvc.RedirectToRouteResult](Microsoft.AspNet.Mvc.RedirectToRouteResult.yml) for the response.
    
        
        .. code-block:: csharp
    
           public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName, object routeValues)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync(System.Object, System.Type, System.String)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using values from the controller's current
        [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() and a
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: System.Object
        :param modelType: The type of model instance to update.
        :type modelType: System.Type
        :param prefix: The prefix to use when looking up values in the current [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]()
        :type prefix: System.String
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public virtual Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNet.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext, System.String, System.Boolean>)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using the
        <paramref name="valueProvider" /> and a
        
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: System.Object
        :param modelType: The type of model instance to update.
        :type modelType: System.Type
        :param prefix: The prefix to use when looking up values in the
    <paramref name="valueProvider" />
        :type prefix: System.String
        :param valueProvider: The [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() used for looking up values.
        :type valueProvider: Microsoft.AspNet.Mvc.ModelBinding.IValueProvider
        :param predicate: A predicate which can be used to filter properties at runtime.
        :type predicate: System.Func{Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,System.String,System.Boolean}
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix, IValueProvider valueProvider, Func<ModelBindingContext, string, bool> predicate)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using values from the controller's current
        [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]().
    
        
        :param model: The model instance to update.
        :type model: TModel
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel, System.String)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using values from the controller's current
        [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() and a
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: TModel
        :param prefix: The prefix to use when looking up values in the current [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]()
        :type prefix: System.String
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNet.Mvc.ModelBinding.IValueProvider)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using the
        <paramref name="valueProvider" /> and a
        
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: TModel
        :param prefix: The prefix to use when looking up values in the
    <paramref name="valueProvider" />.
        :type prefix: System.String
        :param valueProvider: The [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() used for looking up values.
        :type valueProvider: Microsoft.AspNet.Mvc.ModelBinding.IValueProvider
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNet.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext, System.String, System.Boolean>)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using the
        <paramref name="valueProvider" /> and a
        
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: TModel
        :param prefix: The prefix to use when looking up values in the
    <paramref name="valueProvider" />
        :type prefix: System.String
        :param valueProvider: The [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() used for looking up values.
        :type valueProvider: Microsoft.AspNet.Mvc.ModelBinding.IValueProvider
        :param predicate: A predicate which can be used to filter properties at runtime.
        :type predicate: System.Func{Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,System.String,System.Boolean}
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider, Func<ModelBindingContext, string, bool> predicate)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNet.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
    
        
    
        Updates the specified
        <paramref name="model" /> instance using the
        <paramref name="valueProvider" /> and a
        
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: TModel
        :param prefix: The prefix to use when looking up values in the
    <paramref name="valueProvider" />
        :type prefix: System.String
        :param valueProvider: The [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() used for looking up values.
        :type valueProvider: Microsoft.AspNet.Mvc.ModelBinding.IValueProvider
        :param includeExpressions: [System.Linq.Expressions.Expression]()(s) which represent top-level properties
    which need to be included for the current model.
        :type includeExpressions: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider, params Expression<Func<TModel, object>>[] includeExpressions)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext, System.String, System.Boolean>)
    
        
    
        Updates the specified
        <paramref name="model" /> instance using values from the controller's current
        [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() and a
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: TModel
        :param prefix: The prefix to use when looking up values in the current [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]().
        :type prefix: System.String
        :param predicate: A predicate which can be used to filter properties at runtime.
        :type predicate: System.Func{Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,System.String,System.Boolean}
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, Func<ModelBindingContext, string, bool> predicate)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
    
        
    
        Updates the specified
        <paramref name="model" /> instance using values from the controller's current
        [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]() and a
        <paramref name="prefix" />.
    
        
        :param model: The model instance to update.
        :type model: TModel
        :param prefix: The prefix to use when looking up values in the current [Microsoft.AspNet.Mvc.ModelBinding.IValueProvider]().
        :type prefix: System.String
        :param includeExpressions: [System.Linq.Expressions.Expression]()(s) which represent top-level properties
    which need to be included for the current model.
        :type includeExpressions: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A [System.Threading.Tasks.Task]() that on completion returns
    <c>true</c> if the update is successful
    
        
        .. code-block:: csharp
    
           public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, params Expression<Func<TModel, object>>[] includeExpressions)where TModel : class

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryValidateModel(System.Object)
    
        
    
        Validates the specified
        <paramref name="model" /> instance.
    
        
        :param model: The model to validate.
        :type model: System.Object
        :rtype: System.Boolean
        :return: <c>true</c> if the [Microsoft.AspNet.Mvc.Controller.ModelState](Microsoft.AspNet.Mvc.Controller.yml) is valid;
    <c>false</c> otherwise.
    
        
        .. code-block:: csharp
    
           public virtual bool TryValidateModel(object model)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.TryValidateModel(System.Object, System.String)
    
        
    
        Validates the specified
        <paramref name="model" /> instance.
    
        
        :param model: The model to validate.
        :type model: System.Object
        :param prefix: The key to use when looking up information in [Microsoft.AspNet.Mvc.Controller.ModelState](Microsoft.AspNet.Mvc.Controller.yml).
        :type prefix: System.String
        :rtype: System.Boolean
        :return: <c>true</c> if the [Microsoft.AspNet.Mvc.Controller.ModelState](Microsoft.AspNet.Mvc.Controller.yml) is valid;
    <c>false</c> otherwise.
    
        
        .. code-block:: csharp
    
           public virtual bool TryValidateModel(object model, string prefix)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.View()
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object that renders a view to the response.
    
        
        :rtype: Microsoft.AspNet.Mvc.ViewResult
        :return: The created [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ViewResult View()

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.View(System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object by specifying a
        <paramref name="model" />
        to be rendered by the view.
    
        
        :param model: The model that is rendered by the view.
        :type model: System.Object
        :rtype: Microsoft.AspNet.Mvc.ViewResult
        :return: The created [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ViewResult View(object model)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.View(System.String)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object by specifying a
        <paramref name="viewName" />.
    
        
        :param viewName: The name of the view that is rendered to the response.
        :type viewName: System.String
        :rtype: Microsoft.AspNet.Mvc.ViewResult
        :return: The created [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ViewResult View(string viewName)

    .. dn:method:: Microsoft.AspNet.Mvc.Controller.View(System.String, System.Object)
    
        
    
        Creates a [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object by specifying a
        <paramref name="viewName" />
        and the
        <paramref name="model" /> to be rendered by the view.
    
        
        :param viewName: The name of the view that is rendered to the response.
        :type viewName: System.String
        :param model: The model that is rendered by the view.
        :type model: System.Object
        :rtype: Microsoft.AspNet.Mvc.ViewResult
        :return: The created [Microsoft.AspNet.Mvc.ViewResult](Microsoft.AspNet.Mvc.ViewResult.yml) object for the response.
    
        
        .. code-block:: csharp
    
           public virtual ViewResult View(string viewName, object model)

