

FilePathResult Class
====================



.. contents:: 
   :local:



Summary
-------

An [Microsoft.AspNet.Mvc.ActionResult]() that when executed will
write a file from disk to the response using mechanisms provided
by the host.





Inheritance Hierarchy
---------------------
* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNet.Mvc.ActionResult`
* :dn:cls:`Microsoft.AspNet.Mvc.FileResult`
* :dn:cls:`Microsoft.AspNet.Mvc.FilePathResult`





Syntax
------

.. code-block:: csharp

   public class FilePathResult : FileResult, IActionResult



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.Extensions/FilePathResult.cs>`_





.. dn:class:: Microsoft.AspNet.Mvc.FilePathResult


Constructors
------------

.. dn:class:: Microsoft.AspNet.Mvc.FilePathResult
    :noindex:
    :hidden:

    .. dn:constructor:: Microsoft.AspNet.Mvc.FilePathResult.FilePathResult(System.String, MediaTypeHeaderValue)
    
        
    
        Creates a new [Microsoft.AspNet.Mvc.FilePathResult](Microsoft.AspNet.Mvc.FilePathResult.yml) instance with
        the provided
        <paramref name="fileName" /> and the
        provided
        <paramref name="contentType" />.
    
        
        :param fileName: The path to the file. The path must be an absolute
    path. Relative and virtual paths are not supported.
        :type fileName: System.String
        :param contentType: The Content-Type header of the response.
        :type contentType: MediaTypeHeaderValue
    
        
        .. code-block:: csharp
    
           public FilePathResult(string fileName, MediaTypeHeaderValue contentType)

    .. dn:constructor:: Microsoft.AspNet.Mvc.FilePathResult.FilePathResult(System.String, System.String)
    
        
    
        Creates a new [Microsoft.AspNet.Mvc.FilePathResult](Microsoft.AspNet.Mvc.FilePathResult.yml) instance with
        the provided
        <paramref name="fileName" /> and the
        provided
        <paramref name="contentType" />.
    
        
        :param fileName: The path to the file. The path must be an absolute
    path. Relative and virtual paths are not supported.
        :type fileName: System.String
        :param contentType: The Content-Type header of the response.
        :type contentType: System.String
    
        
        .. code-block:: csharp
    
           public FilePathResult(string fileName, string contentType)


Properties
----------

.. dn:class:: Microsoft.AspNet.Mvc.FilePathResult
    :noindex:
    :hidden:

    .. dn:property:: Microsoft.AspNet.Mvc.FilePathResult.FileName
    
        
    
        Gets or sets the path to the file that will be sent back as the response.
    
        
        :rtype: System.String
    
        
        .. code-block:: csharp
    
           public string FileName { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.FilePathResult.FileProvider
    
        
    
        Gets or sets the @!:IFileProvider- used to resolve paths.
    
        
        :rtype: IFileProvider
    
        
        .. code-block:: csharp
    
           public IFileProvider FileProvider { get; set; }


Methods
-------

.. dn:class:: Microsoft.AspNet.Mvc.FilePathResult
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.FilePathResult.IsPathRooted(System.String)
    
        
    
        Determines if the provided path is absolute or relative. The default implementation considers
        paths starting with '/' to be relative.
    
        
        :param path: The path to examine.
        :type path: System.String
        :rtype: System.Boolean
        :return: True if the path is absolute.
    
        
        .. code-block:: csharp
    
           protected virtual bool IsPathRooted(string path)

    .. dn:method:: Microsoft.AspNet.Mvc.FilePathResult.NormalizePath(System.String)
    
        
    
        Creates a normalized representation of the given
        <paramref name="path" />. The default
        implementation doesn't support files with '\' in the file name and treats the '\' as
        a directory separator. The default implementation will convert all the '\' into '/'
        and will remove leading '~' characters.
    
        
        :param path: The path to normalize.
        :type path: System.String
        :rtype: System.String
        :return: The normalized path.
    
        
        .. code-block:: csharp
    
           protected virtual string NormalizePath(string path)

    .. dn:method:: Microsoft.AspNet.Mvc.FilePathResult.WriteFileAsync(HttpResponse, System.Threading.CancellationToken)
    
        
        :param response: 
        :type response: HttpResponse
        :param cancellation: 
        :type cancellation: System.Threading.CancellationToken
        :rtype: System.Threading.Tasks.Task
    
        
        .. code-block:: csharp
    
           protected override Task WriteFileAsync(HttpResponse response, CancellationToken cancellation)

