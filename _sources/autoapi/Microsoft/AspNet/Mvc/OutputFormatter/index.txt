

OutputFormatter Class
=====================



.. contents:: 
   :local:



Summary
-------

Writes an object to the output stream.





Inheritance Hierarchy
---------------------
* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNet.Mvc.OutputFormatter`





Syntax
------

.. code-block:: csharp

   public abstract class OutputFormatter : IOutputFormatter, IApiResponseFormatMetadataProvider



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.Core/OutputFormatter.cs>`_





.. dn:class:: Microsoft.AspNet.Mvc.OutputFormatter


Constructors
------------

.. dn:class:: Microsoft.AspNet.Mvc.OutputFormatter
    :noindex:
    :hidden:

    .. dn:constructor:: Microsoft.AspNet.Mvc.OutputFormatter.OutputFormatter()
    
        
    
        Initializes a new instance of the [Microsoft.AspNet.Mvc.OutputFormatter](Microsoft.AspNet.Mvc.OutputFormatter.yml) class.
    
        
    
        
        .. code-block:: csharp
    
           protected OutputFormatter()


Properties
----------

.. dn:class:: Microsoft.AspNet.Mvc.OutputFormatter
    :noindex:
    :hidden:

    .. dn:property:: Microsoft.AspNet.Mvc.OutputFormatter.SupportedEncodings
    
        
    
        Gets the mutable collection of character encodings supported by
        this [Microsoft.AspNet.Mvc.OutputFormatter](Microsoft.AspNet.Mvc.OutputFormatter.yml). The encodings are
        used when writing the data.
    
        
        :rtype: System.Collections.Generic.IList{System.Text.Encoding}
    
        
        .. code-block:: csharp
    
           public IList<Encoding> SupportedEncodings { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.OutputFormatter.SupportedMediaTypes
    
        
    
        Gets the mutable collection of @!:MediaTypeHeaderValue- elements supported by
        this [Microsoft.AspNet.Mvc.OutputFormatter](Microsoft.AspNet.Mvc.OutputFormatter.yml).
    
        
        :rtype: System.Collections.Generic.IList{MediaTypeHeaderValue}
    
        
        .. code-block:: csharp
    
           public IList<MediaTypeHeaderValue> SupportedMediaTypes { get; }


Methods
-------

.. dn:class:: Microsoft.AspNet.Mvc.OutputFormatter
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.CanWriteResult(Microsoft.AspNet.Mvc.OutputFormatterContext, MediaTypeHeaderValue)
    
        
        :param context: 
        :type context: Microsoft.AspNet.Mvc.OutputFormatterContext
        :param contentType: 
        :type contentType: MediaTypeHeaderValue
        :rtype: System.Boolean
    
        
        .. code-block:: csharp
    
           public virtual bool CanWriteResult(OutputFormatterContext context, MediaTypeHeaderValue contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.CanWriteType(System.Type, System.Type)
    
        
    
        Returns a value indicating whether or not the given type can be written by this serializer.
    
        
        :param declaredType: The declared type.
        :type declaredType: System.Type
        :param runtimeType: The runtime type.
        :type runtimeType: System.Type
        :rtype: System.Boolean
        :return: <c>true</c> if the type can be written, otherwise
    <c>false</c>.
    
        
        .. code-block:: csharp
    
           protected virtual bool CanWriteType(Type declaredType, Type runtimeType)

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.GetSupportedContentTypes(System.Type, System.Type, MediaTypeHeaderValue)
    
        
        :param declaredType: 
        :type declaredType: System.Type
        :param runtimeType: 
        :type runtimeType: System.Type
        :param contentType: 
        :type contentType: MediaTypeHeaderValue
        :rtype: System.Collections.Generic.IReadOnlyList{MediaTypeHeaderValue}
    
        
        .. code-block:: csharp
    
           public virtual IReadOnlyList<MediaTypeHeaderValue> GetSupportedContentTypes(Type declaredType, Type runtimeType, MediaTypeHeaderValue contentType)

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.SelectCharacterEncoding(Microsoft.AspNet.Mvc.OutputFormatterContext)
    
        
    
        Determines the best [System.Text.Encoding]() amongst the supported encodings
        for reading or writing an HTTP entity body based on the provided
        <paramref name="contentTypeHeader" />.
    
        
        :param context: The formatter context associated with the call.
        :type context: Microsoft.AspNet.Mvc.OutputFormatterContext
        :rtype: System.Text.Encoding
        :return: The [System.Text.Encoding]() to use when reading the request or writing the response.
    
        
        .. code-block:: csharp
    
           public virtual Encoding SelectCharacterEncoding(OutputFormatterContext context)

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.WriteAsync(Microsoft.AspNet.Mvc.OutputFormatterContext)
    
        
        :param context: 
        :type context: Microsoft.AspNet.Mvc.OutputFormatterContext
        :rtype: System.Threading.Tasks.Task
    
        
        .. code-block:: csharp
    
           public Task WriteAsync(OutputFormatterContext context)

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNet.Mvc.OutputFormatterContext)
    
        
    
        Writes the response body.
    
        
        :param context: The formatter context associated with the call.
        :type context: Microsoft.AspNet.Mvc.OutputFormatterContext
        :rtype: System.Threading.Tasks.Task
        :return: A task which can write the response body.
    
        
        .. code-block:: csharp
    
           public abstract Task WriteResponseBodyAsync(OutputFormatterContext context)

    .. dn:method:: Microsoft.AspNet.Mvc.OutputFormatter.WriteResponseHeaders(Microsoft.AspNet.Mvc.OutputFormatterContext)
    
        
    
        Sets the headers on @!:Microsoft.AspNet.Http.HttpResponse- object.
    
        
        :param context: The formatter context associated with the call.
        :type context: Microsoft.AspNet.Mvc.OutputFormatterContext
    
        
        .. code-block:: csharp
    
           public virtual void WriteResponseHeaders(OutputFormatterContext context)

