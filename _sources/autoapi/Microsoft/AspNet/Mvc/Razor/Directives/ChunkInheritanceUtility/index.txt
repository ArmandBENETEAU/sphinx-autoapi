

ChunkInheritanceUtility Class
=============================



.. contents:: 
   :local:



Summary
-------

A utility type for supporting inheritance of directives into a page from applicable
<c>_ViewImports</c> pages.





Inheritance Hierarchy
---------------------
* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility`





Syntax
------

.. code-block:: csharp

   public class ChunkInheritanceUtility



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.Razor.Host/Directives/ChunkInheritanceUtility.cs>`_





.. dn:class:: Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility


Constructors
------------

.. dn:class:: Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility
    :noindex:
    :hidden:

    .. dn:constructor:: Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility.ChunkInheritanceUtility(Microsoft.AspNet.Mvc.Razor.MvcRazorHost, Microsoft.AspNet.Mvc.Razor.Directives.IChunkTreeCache, System.Collections.Generic.IReadOnlyList<Chunk>)
    
        
    
        Initializes a new instance of [Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility](Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility.yml).
    
        
    
        
        :param razorHost: The [Microsoft.AspNet.Mvc.Razor.MvcRazorHost](Microsoft.AspNet.Mvc.Razor.MvcRazorHost.yml) used to parse <c>_ViewImports</c> pages.
        
        :type razorHost: Microsoft.AspNet.Mvc.Razor.MvcRazorHost
    
        
        :param chunkTreeCache: [Microsoft.AspNet.Mvc.Razor.Directives.IChunkTreeCache](Microsoft.AspNet.Mvc.Razor.Directives.IChunkTreeCache.yml) that caches @!:ChunkTree- instances.
        
        :type chunkTreeCache: Microsoft.AspNet.Mvc.Razor.Directives.IChunkTreeCache
    
        
        :param defaultInheritedChunks: Sequence of @!:Chunk-s inherited by default.
        
        :type defaultInheritedChunks: System.Collections.Generic.IReadOnlyList{Chunk}
    
        
        .. code-block:: csharp
    
           public ChunkInheritanceUtility(MvcRazorHost razorHost, IChunkTreeCache chunkTreeCache, IReadOnlyList<Chunk> defaultInheritedChunks)


Methods
-------

.. dn:class:: Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility.GetInheritedChunkTrees(System.String)
    
        
    
        Gets an ordered [System.Collections.Generic.IReadOnlyList`1]() of parsed @!:ChunkTree- for each
        
        <c>_ViewImports</c> that is applicable to the page located at
        <paramref name="pagePath" />. The list is
        ordered so that the @!:ChunkTree- for the
        <c>_ViewImports</c> closest to the
        
        <paramref name="pagePath" /> in the file system appears first.
    
        
    
        
        :param pagePath: The path of the page to locate inherited chunks for.
        
        :type pagePath: System.String
        :rtype: System.Collections.Generic.IReadOnlyList{ChunkTree}
        :return: A [System.Collections.Generic.IReadOnlyList`1]() of parsed <c>_ViewImports</c>@!:ChunkTree-s.
    
        
        .. code-block:: csharp
    
           public virtual IReadOnlyList<ChunkTree> GetInheritedChunkTrees(string pagePath)

    .. dn:method:: Microsoft.AspNet.Mvc.Razor.Directives.ChunkInheritanceUtility.MergeInheritedChunkTrees(ChunkTree, System.Collections.Generic.IReadOnlyList<ChunkTree>, System.String)
    
        
    
        Merges @!:Chunk- inherited by default and @!:ChunkTree- instances produced by parsing
        
        <c>_ViewImports</c> files into the specified
        <paramref name="chunkTree" />.
    
        
    
        
        :param chunkTree: The @!:ChunkTree- to merge in to.
        
        :type chunkTree: ChunkTree
    
        
        :param inheritedChunkTrees: [System.Collections.Generic.IReadOnlyList`1]() inherited from <c>_ViewImports</c> files.
        
        :type inheritedChunkTrees: System.Collections.Generic.IReadOnlyList{ChunkTree}
    
        
        :param defaultModel: The list of chunks to merge.
        
        :type defaultModel: System.String
    
        
        .. code-block:: csharp
    
           public void MergeInheritedChunkTrees(ChunkTree chunkTree, IReadOnlyList<ChunkTree> inheritedChunkTrees, string defaultModel)

