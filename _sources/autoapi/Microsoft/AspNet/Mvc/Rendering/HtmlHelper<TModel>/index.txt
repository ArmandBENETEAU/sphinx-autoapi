

HtmlHelper<TModel> Class
========================



.. contents:: 
   :local:






Inheritance Hierarchy
---------------------
* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNet.Mvc.Rendering.HtmlHelper`
* :dn:cls:`Microsoft.AspNet.Mvc.Rendering.HtmlHelper\<TModel>`





Syntax
------

.. code-block:: csharp

   public class HtmlHelper<TModel> : HtmlHelper, ICanHasViewContext, IHtmlHelper<TModel>, IHtmlHelper



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.Extensions/Rendering/Html/HtmlHelperOfT.cs>`_





.. dn:class:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>


Constructors
------------

.. dn:class:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>
    :noindex:
    :hidden:

    .. dn:constructor:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.HtmlHelper(Microsoft.AspNet.Mvc.Rendering.IHtmlGenerator, Microsoft.AspNet.Mvc.Rendering.ICompositeViewEngine, Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider, IHtmlEncoder, IUrlEncoder, IJavaScriptStringEncoder)
    
        
    
        
        
    
        
        :param htmlGenerator: 
        :type htmlGenerator: Microsoft.AspNet.Mvc.Rendering.IHtmlGenerator
        :param viewEngine: 
        :type viewEngine: Microsoft.AspNet.Mvc.Rendering.ICompositeViewEngine
        :param metadataProvider: 
        :type metadataProvider: Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider
        :param htmlEncoder: 
        :type htmlEncoder: IHtmlEncoder
        :param urlEncoder: 
        :type urlEncoder: IUrlEncoder
        :param javaScriptStringEncoder: 
        :type javaScriptStringEncoder: IJavaScriptStringEncoder
    
        
        .. code-block:: csharp
    
           public HtmlHelper(IHtmlGenerator htmlGenerator, ICompositeViewEngine viewEngine, IModelMetadataProvider metadataProvider, IHtmlEncoder htmlEncoder, IUrlEncoder urlEncoder, IJavaScriptStringEncoder javaScriptStringEncoder)


Properties
----------

.. dn:class:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>
    :noindex:
    :hidden:

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.ViewData
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public ViewDataDictionary<TModel> ViewData { get; }


Methods
-------

.. dn:class:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.CheckBoxFor(System.Linq.Expressions.Expression<System.Func<TModel, System.Boolean>>, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString CheckBoxFor(Expression<Func<TModel, bool>> expression, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.Contextualize(Microsoft.AspNet.Mvc.ViewContext)
    
        
        :param viewContext: 
        :type viewContext: Microsoft.AspNet.Mvc.ViewContext
    
        
        .. code-block:: csharp
    
           public override void Contextualize(ViewContext viewContext)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.DisplayFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.String, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param templateName: 
        :type templateName: System.String
        :param htmlFieldName: 
        :type htmlFieldName: System.String
        :param additionalViewData: 
        :type additionalViewData: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString DisplayFor<TResult>(Expression<Func<TModel, TResult>> expression, string templateName, string htmlFieldName, object additionalViewData)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.DisplayNameForInnerType<TModelItem, TResult>(System.Linq.Expressions.Expression<System.Func<TModelItem, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModelItem},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string DisplayNameForInnerType<TModelItem, TResult>(Expression<Func<TModelItem, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.DisplayNameFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string DisplayNameFor<TResult>(Expression<Func<TModel, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.DisplayTextFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string DisplayTextFor<TResult>(Expression<Func<TModel, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.DropDownListFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Collections.Generic.IEnumerable<Microsoft.AspNet.Mvc.Rendering.SelectListItem>, System.String, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param selectList: 
        :type selectList: System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem}
        :param optionLabel: 
        :type optionLabel: System.String
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString DropDownListFor<TResult>(Expression<Func<TModel, TResult>> expression, IEnumerable<SelectListItem> selectList, string optionLabel, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.EditorFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.String, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param templateName: 
        :type templateName: System.String
        :param htmlFieldName: 
        :type htmlFieldName: System.String
        :param additionalViewData: 
        :type additionalViewData: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString EditorFor<TResult>(Expression<Func<TModel, TResult>> expression, string templateName, string htmlFieldName, object additionalViewData)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.GetExpressionName<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           protected string GetExpressionName<TResult>(Expression<Func<TModel, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.GetModelExplorer<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           protected ModelExplorer GetModelExplorer<TResult>(Expression<Func<TModel, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.HiddenFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString HiddenFor<TResult>(Expression<Func<TModel, TResult>> expression, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.IdFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string IdFor<TResult>(Expression<Func<TModel, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.LabelFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param labelText: 
        :type labelText: System.String
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString LabelFor<TResult>(Expression<Func<TModel, TResult>> expression, string labelText, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.ListBoxFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Collections.Generic.IEnumerable<Microsoft.AspNet.Mvc.Rendering.SelectListItem>, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param selectList: 
        :type selectList: System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem}
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString ListBoxFor<TResult>(Expression<Func<TModel, TResult>> expression, IEnumerable<SelectListItem> selectList, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.NameFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string NameFor<TResult>(Expression<Func<TModel, TResult>> expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.PasswordFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString PasswordFor<TResult>(Expression<Func<TModel, TResult>> expression, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.RadioButtonFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param value: 
        :type value: System.Object
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString RadioButtonFor<TResult>(Expression<Func<TModel, TResult>> expression, object value, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.TextAreaFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Int32, System.Int32, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param rows: 
        :type rows: System.Int32
        :param columns: 
        :type columns: System.Int32
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString TextAreaFor<TResult>(Expression<Func<TModel, TResult>> expression, int rows, int columns, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.TextBoxFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.Object)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param format: 
        :type format: System.String
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString TextBoxFor<TResult>(Expression<Func<TModel, TResult>> expression, string format, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.ValidationMessageFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.Object, System.String)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param message: 
        :type message: System.String
        :param htmlAttributes: 
        :type htmlAttributes: System.Object
        :param tag: 
        :type tag: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           public HtmlString ValidationMessageFor<TResult>(Expression<Func<TModel, TResult>> expression, string message, object htmlAttributes, string tag)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.HtmlHelper<TModel>.ValueFor<TResult>(System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String)
    
        
        :param expression: 
        :type expression: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
        :param format: 
        :type format: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string ValueFor<TResult>(Expression<Func<TModel, TResult>> expression, string format)

