

CacheTagHelper Class
====================



.. contents:: 
   :local:



Summary
-------

@!:TagHelper- implementation targeting &lt;cache&gt; elements.




Inheritance Hierarchy
---------------------
* :dn:cls:`TagHelper`
* :dn:cls:`Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper`





Syntax
------

.. code-block:: csharp

   public class CacheTagHelper : TagHelper



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.TagHelpers/CacheTagHelper.cs>`_





.. dn:class:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper


Fields
------

.. dn:class:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper
    :noindex:
    :hidden:

    .. dn:field:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.CacheKeyPrefix
    
        
    
        
        
    
        
    
        
        .. code-block:: csharp
    
           public static readonly string CacheKeyPrefix


Constructors
------------

.. dn:class:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper
    :noindex:
    :hidden:

    .. dn:constructor:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.CacheTagHelper(IMemoryCache)
    
        
    
        
        
    
        
        :param memoryCache: The @!:IMemoryCache-.
        :type memoryCache: IMemoryCache
    
        
        .. code-block:: csharp
    
           public CacheTagHelper(IMemoryCache memoryCache)


Properties
----------

.. dn:class:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper
    :noindex:
    :hidden:

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.Enabled
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public bool Enabled { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.ExpiresAfter
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public TimeSpan? ExpiresAfter { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.ExpiresOn
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public DateTimeOffset? ExpiresOn { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.ExpiresSliding
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public TimeSpan? ExpiresSliding { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.MemoryCache
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           protected IMemoryCache MemoryCache { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.Priority
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public CacheItemPriority? Priority { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.VaryBy
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string VaryBy { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.VaryByCookie
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string VaryByCookie { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.VaryByHeader
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string VaryByHeader { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.VaryByQuery
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string VaryByQuery { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.VaryByRoute
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public string VaryByRoute { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.VaryByUser
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public bool VaryByUser { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.ViewContext
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           public ViewContext ViewContext { get; set; }


Methods
-------

.. dn:class:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.TagHelpers.CacheTagHelper.ProcessAsync(TagHelperContext, TagHelperOutput)
    
        
        :param context: 
        :type context: TagHelperContext
        :param output: 
        :type output: TagHelperOutput
        :rtype: 
    
        
        .. code-block:: csharp
    
           public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output)

