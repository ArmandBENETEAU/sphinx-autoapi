

HttpRequestMessageExtensions Class
==================================



.. contents:: 
   :local:



Summary
-------

Provides extension methods for the [System.Net.Http.HttpRequestMessage]() class.





Inheritance Hierarchy
---------------------
* :dn:cls:`System.Object`
* :dn:cls:`System.Net.Http.HttpRequestMessageExtensions`





Syntax
------

.. code-block:: csharp

   public class HttpRequestMessageExtensions



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs>`_





.. dn:class:: System.Net.Http.HttpRequestMessageExtensions


Methods
-------

.. dn:class:: System.Net.Http.HttpRequestMessageExtensions
    :noindex:
    :hidden:

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, InvalidByteRangeException)
    
        
    
        Helper method for creating an [System.Net.Http.HttpResponseMessage]() message with a "416 (Requested Range Not
        Satisfiable)" status code. This response can be used in combination with the
        @!:ByteRangeStreamContent- to indicate that the requested range or
        ranges do not overlap with the current resource. The response contains a "Content-Range" header indicating
        the valid upper and lower bounds for requested ranges.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param invalidByteRangeException: An @!:InvalidByteRangeException- instance, typically
    thrown by a @!:ByteRangeStreamContent- instance.
        :type invalidByteRangeException: InvalidByteRangeException
        :rtype: System.Net.Http.HttpResponseMessage
        :return: An 416 (Requested Range Not Satisfiable) error response with a Content-Range header indicating the valid
    range.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateErrorResponse(HttpRequestMessage request, InvalidByteRangeException invalidByteRangeException)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" />
        representing an error with an instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> wrapping an
        
        <see cref="T:System.Web.Http.HttpError" /> for model state
        <paramref name="modelState" />. If no formatter is found, this
        method returns a response with status 406 NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param modelState: The model state.
        :type modelState: Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary
        :rtype: System.Net.Http.HttpResponseMessage
        :return: An error response for
    <paramref name="modelState" /> with status code
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateErrorResponse(HttpRequestMessage request, HttpStatusCode statusCode, ModelStateDictionary modelState)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.Exception)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" />
        representing an error with an instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> wrapping an
        
        <see cref="T:System.Web.Http.HttpError" /> for exception
        <paramref name="exception" />. If no formatter is found, this method
        returns a response with status 406 NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param exception: The exception.
        :type exception: System.Exception
        :rtype: System.Net.Http.HttpResponseMessage
        :return: An error response for
    <paramref name="exception" /> with status code
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateErrorResponse(HttpRequestMessage request, HttpStatusCode statusCode, Exception exception)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.String)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" />
        representing an error with an instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> wrapping an
        
        <see cref="T:System.Web.Http.HttpError" /> with message
        <paramref name="message" />. If no formatter is found, this method
        returns a response with status 406 NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param message: The error message.
        :type message: System.String
        :rtype: System.Net.Http.HttpResponseMessage
        :return: An error response with error message
    <paramref name="message" /> and status code
    
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateErrorResponse(HttpRequestMessage request, HttpStatusCode statusCode, string message)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.String, System.Exception)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" />
        representing an error with an instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> wrapping an
        
        <see cref="T:System.Web.Http.HttpError" /> with error message
        <paramref name="message" /> for exception
        
        <paramref name="exception" />. If no formatter is found, this method returns a response with status 406
        NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param message: The error message.
        :type message: System.String
        :param exception: The exception.
        :type exception: System.Exception
        :rtype: System.Net.Http.HttpResponseMessage
        :return: An error response for
    <paramref name="exception" /> with error message
    <paramref name="message" />
    and status code
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateErrorResponse(HttpRequestMessage request, HttpStatusCode statusCode, string message, Exception exception)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.Web.Http.HttpError)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" />
        representing an error with an instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> wrapping
        <paramref name="error" />
        as the content. If no formatter is found, this method returns a response with status 406 NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param error: The error to wrap.
        :type error: System.Web.Http.HttpError
        :rtype: System.Net.Http.HttpResponseMessage
        :return: An error response wrapping
    <paramref name="error" /> with status code
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateErrorResponse(HttpRequestMessage request, HttpStatusCode statusCode, HttpError error)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> as the content if a formatter can be found. If no formatter is
        found, this method returns a response with status 406 NotAcceptable.
        configuration.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, MediaTypeFormatter)
    
        
    
        Helper method that creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        <see cref="!:ObjectContent&lt;T&gt;" />
        instance containing the provided
        <paramref name="value" /> and the given
        <paramref name="formatter" />.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :param formatter: The formatter to use.
        :type formatter: MediaTypeFormatter
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeFormatter formatter)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
    
        
    
        Helper method that creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        <see cref="!:ObjectContent&lt;T&gt;" />
        instance containing the provided
        <paramref name="value" /> and the given
        <paramref name="formatter" />.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :param formatter: The formatter to use.
        :type formatter: MediaTypeFormatter
        :param mediaType: The media type override to set on the response's content. Can be
    <c>null</c>.
        :type mediaType: System.Net.Http.Headers.MediaTypeHeaderValue
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, MediaTypeFormatter, System.String)
    
        
    
        Helper method that creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        <see cref="!:ObjectContent&lt;T&gt;" />
        instance containing the provided
        <paramref name="value" /> and the given
        <paramref name="formatter" />.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :param formatter: The formatter to use.
        :type formatter: MediaTypeFormatter
        :param mediaType: The media type override to set on the response's content. Can be
    <c>null</c>.
        :type mediaType: System.String
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeFormatter formatter, string mediaType)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Collections.Generic.IEnumerable<MediaTypeFormatter>)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> as the content if a formatter can be found. If no formatter is
        found, this method returns a response with status 406 NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :param formatters: 
        :type formatters: System.Collections.Generic.IEnumerable{MediaTypeFormatter}
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value, IEnumerable<MediaTypeFormatter> formatters)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Headers.MediaTypeHeaderValue)
    
        
    
        Helper method that creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        <see cref="!:ObjectContent&lt;T&gt;" />
        instance containing the provided
        <paramref name="value" />. The given
        <paramref name="mediaType" /> is used
        to find an instance of
        <see cref="!:MediaTypeFormatter" />.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :param mediaType: The media type used to look up an instance of @!:MediaTypeFormatter-.
        :type mediaType: System.Net.Http.Headers.MediaTypeHeaderValue
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeHeaderValue mediaType)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.String)
    
        
    
        Helper method that creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        <see cref="!:ObjectContent&lt;T&gt;" />
        instance containing the provided
        <paramref name="value" />. The given
        <paramref name="mediaType" /> is used
        to find an instance of
        <see cref="!:MediaTypeFormatter" />.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param statusCode: The status code of the created response.
        :type statusCode: System.Net.HttpStatusCode
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :param mediaType: The media type used to look up an instance of @!:MediaTypeFormatter-.
        :type mediaType: System.String
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with
    <paramref name="statusCode" />.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, HttpStatusCode statusCode, T value, string mediaType)

    .. dn:method:: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, T)
    
        
    
        Helper method that performs content negotiation and creates a
        <see cref="T:System.Net.Http.HttpResponseMessage" /> with an
        instance of
        <see cref="!:ObjectContent&lt;T&gt;" /> as the content and
        <see cref="F:System.Net.HttpStatusCode.OK" />
        as the status code if a formatter can be found. If no formatter is found, this method returns a response
        with status 406 NotAcceptable.
    
        
        :param request: The request.
        :type request: System.Net.Http.HttpRequestMessage
        :param value: The value to wrap. Can be
    <c>null</c>.
        :type value: T
        :rtype: System.Net.Http.HttpResponseMessage
        :return: A response wrapping
    <paramref name="value" /> with [System.Net.HttpStatusCode.OK]() status code.
    
        
        .. code-block:: csharp
    
           public static HttpResponseMessage CreateResponse<T>(HttpRequestMessage request, T value)

