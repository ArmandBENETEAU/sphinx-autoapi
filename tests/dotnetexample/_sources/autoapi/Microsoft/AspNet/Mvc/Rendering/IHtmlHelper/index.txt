

IHtmlHelper Interface
=====================



.. contents:: 
   :local:



Summary
-------

Base HTML helpers.








Syntax
------

.. code-block:: csharp

   public interface IHtmlHelper



GitHub
------

`View on GitHub <https://github.com/aspnet/mvc/blob/master/src/Microsoft.AspNet.Mvc.Extensions/Rendering/IHtmlHelper.cs>`_





.. dn:interface:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper


Properties
----------

.. dn:interface:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper
    :noindex:
    :hidden:

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Html5DateRenderingMode
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           Html5DateRenderingMode Html5DateRenderingMode { get; set; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.HtmlEncoder
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           IHtmlEncoder HtmlEncoder { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.IdAttributeDotReplacement
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           string IdAttributeDotReplacement { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.JavaScriptStringEncoder
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           IJavaScriptStringEncoder JavaScriptStringEncoder { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.MetadataProvider
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           IModelMetadataProvider MetadataProvider { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.TempData
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           ITempDataDictionary TempData { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.UrlEncoder
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           IUrlEncoder UrlEncoder { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ViewBag
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           ViewBag { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ViewContext
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           ViewContext ViewContext { get; }

    .. dn:property:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ViewData
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           ViewDataDictionary ViewData { get; }


Methods
-------

.. dn:interface:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper
    :noindex:
    :hidden:

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ActionLink(System.String, System.String, System.String, System.String, System.String, System.String, System.Object, System.Object)
    
        
    
        
        
    
        
        :param linkText: The inner text of the anchor element. Must not be
    <c>null</c>.
        :type linkText: System.String
        :param actionName: The name of the action.
        :type actionName: System.String
        :param controllerName: The name of the controller.
        :type controllerName: System.String
        :param protocol: The protocol for the URL, such as "http" or "https".
        :type protocol: System.String
        :param hostname: The host name for the URL.
        :type hostname: System.String
        :param fragment: The URL fragment name (the anchor name).
        :type fragment: System.String
        :param routeValues: An [System.Object]() that contains the parameters for a route. The parameters are retrieved through
    reflection by examining the properties of the [System.Object](). This [System.Object]() is typically
    created using [System.Object]() initializer syntax. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the route parameters.
        :type routeValues: System.Object
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString ActionLink(string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.AntiForgeryToken()
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString AntiForgeryToken()

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.BeginForm(System.String, System.String, System.Object, Microsoft.AspNet.Mvc.Rendering.FormMethod, System.Object)
    
        
    
        
        
    
        
        :param actionName: The name of the action method.
        :type actionName: System.String
        :param controllerName: The name of the controller.
        :type controllerName: System.String
        :param routeValues: An [System.Object]() that contains the parameters for a route. The parameters are retrieved through
    reflection by examining the properties of the [System.Object](). This [System.Object]() is typically
    created using [System.Object]() initializer syntax. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the route parameters.
        :type routeValues: System.Object
        :param method: The HTTP method for processing the form, either GET or POST.
        :type method: Microsoft.AspNet.Mvc.Rendering.FormMethod
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           MvcForm BeginForm(string actionName, string controllerName, object routeValues, FormMethod method, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.BeginRouteForm(System.String, System.Object, Microsoft.AspNet.Mvc.Rendering.FormMethod, System.Object)
    
        
    
        
        
    
        
        :param routeName: The name of the route.
        :type routeName: System.String
        :param routeValues: An [System.Object]() that contains the parameters for a route. The parameters are retrieved through
    reflection by examining the properties of the [System.Object](). This [System.Object]() is typically
    created using [System.Object]() initializer syntax. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the route parameters.
        :type routeValues: System.Object
        :param method: The HTTP method for processing the form, either GET or POST.
        :type method: Microsoft.AspNet.Mvc.Rendering.FormMethod
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           MvcForm BeginRouteForm(string routeName, object routeValues, FormMethod method, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.CheckBox(System.String, System.Nullable<System.Boolean>, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param isChecked: If
    <c>true</c>, checkbox is initially checked.
        :type isChecked: System.Nullable{System.Boolean}
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the checkbox element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString CheckBox(string expression, bool ? isChecked, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Display(System.String, System.String, System.String, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model. May identify a single property or an
    [System.Object]() that contains the properties to display.
        :type expression: System.String
        :param templateName: The name of the template used to create the HTML markup.
        :type templateName: System.String
        :param htmlFieldName: A [System.String]() used to disambiguate the names of HTML elements that are created for
    properties that have the same name.
        :type htmlFieldName: System.String
        :param additionalViewData: An anonymous [System.Object]() or [System.Collections.Generic.IDictionary`2]() that can contain additional
    view data that will be merged into the [Microsoft.AspNet.Mvc.ViewDataDictionary`1](Microsoft.AspNet.Mvc.ViewDataDictionary`1.yml) instance created for the
    template.
        :type additionalViewData: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Display(string expression, string templateName, string htmlFieldName, object additionalViewData)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DisplayName(System.String)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string DisplayName(string expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DisplayText(System.String)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string DisplayText(string expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DropDownList(System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNet.Mvc.Rendering.SelectListItem>, System.String, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param selectList: A collection of [Microsoft.AspNet.Mvc.Rendering.SelectListItem](Microsoft.AspNet.Mvc.Rendering.SelectListItem.yml) objects used to populate the &lt;select&gt; element with
    &lt;optgroup&gt; and &lt;option&gt; elements.
        :type selectList: System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem}
        :param optionLabel: The text for a default empty item. Does not include such an item if argument is
    <c>null</c>.
        :type optionLabel: System.String
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString DropDownList(string expression, IEnumerable<SelectListItem> selectList, string optionLabel, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Editor(System.String, System.String, System.String, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model. May identify a single property or an
    [System.Object]() that contains the properties to edit.
        :type expression: System.String
        :param templateName: The name of the template used to create the HTML markup.
        :type templateName: System.String
        :param htmlFieldName: A [System.String]() used to disambiguate the names of HTML elements that are created for
    properties that have the same name.
        :type htmlFieldName: System.String
        :param additionalViewData: An anonymous [System.Object]() or [System.Collections.Generic.IDictionary`2]() that can contain additional
    view data that will be merged into the [Microsoft.AspNet.Mvc.ViewDataDictionary`1](Microsoft.AspNet.Mvc.ViewDataDictionary`1.yml) instance created for the
    template.
        :type additionalViewData: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Editor(string expression, string templateName, string htmlFieldName, object additionalViewData)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Encode(System.Object)
    
        
    
        
        
    
        
        :param value: The [System.Object]() to encode.
        :type value: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           string Encode(object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Encode(System.String)
    
        
    
        
        
    
        
        :param value: The [System.String]() to encode.
        :type value: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string Encode(string value)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.EndForm()
    
        
    
        
        
    
        
    
        
        .. code-block:: csharp
    
           void EndForm()

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.FormatValue(System.Object, System.String)
    
        
    
        
        
    
        
        :param value: The value.
        :type value: System.Object
        :param format: The composite format [System.String]() (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).
        :type format: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string FormatValue(object value, string format)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.GenerateIdFromName(System.String)
    
        
    
        
        
    
        
        :param fullName: Fully-qualified expression name, ignoring the current model. Must not be
    <c>null</c>.
        :type fullName: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string GenerateIdFromName(string fullName)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.GetClientValidationRules(Microsoft.AspNet.Mvc.ModelBinding.ModelExplorer, System.String)
    
        
    
        
        
    
        
        :param modelExplorer: 
        :type modelExplorer: Microsoft.AspNet.Mvc.ModelBinding.ModelExplorer
        :param expression: Expression name, relative to the current model. Used to determine [Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata]() when
    
    <paramref name="metadata" /> is
    <c>null</c>; ignored otherwise.
        :type expression: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           IEnumerable<ModelClientValidationRule> GetClientValidationRules(ModelExplorer modelExplorer, string expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.GetEnumSelectList(System.Type)
    
        
    
        
        
    
        
        :param enumType: [System.Type]() to generate a select list for.
        :type enumType: System.Type
        :rtype: 
    
        
        .. code-block:: csharp
    
           IEnumerable<SelectListItem> GetEnumSelectList(Type enumType)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.GetEnumSelectList<TEnum>()
    
        
    
        
        
    
        
        :rtype: 
    
        
        .. code-block:: csharp
    
           IEnumerable<SelectListItem> GetEnumSelectList<TEnum>()where TEnum : struct

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Hidden(System.String, System.Object, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param value: If non-
    <c>null</c>, value to include in the element.
        :type value: System.Object
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Hidden(string expression, object value, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Id(System.String)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string Id(string expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Label(System.String, System.String, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param labelText: The inner text of the element.
        :type labelText: System.String
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Label(string expression, string labelText, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ListBox(System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNet.Mvc.Rendering.SelectListItem>, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param selectList: A collection of [Microsoft.AspNet.Mvc.Rendering.SelectListItem](Microsoft.AspNet.Mvc.Rendering.SelectListItem.yml) objects used to populate the &lt;select&gt; element with
    &lt;optgroup&gt; and &lt;option&gt; elements.
        :type selectList: System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem}
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString ListBox(string expression, IEnumerable<SelectListItem> selectList, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Name(System.String)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string Name(string expression)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String, System.Object, Microsoft.AspNet.Mvc.ViewDataDictionary)
    
        
    
        
        
    
        
        :param partialViewName: The name of the partial view used to create the HTML markup. Must not be
    <c>null</c>.
        :type partialViewName: System.String
        :param model: A model to pass into the partial view.
        :type model: System.Object
        :param viewData: A [Microsoft.AspNet.Mvc.ViewDataDictionary](Microsoft.AspNet.Mvc.ViewDataDictionary.yml) to pass into the partial view.
        :type viewData: Microsoft.AspNet.Mvc.ViewDataDictionary
        :rtype: 
    
        
        .. code-block:: csharp
    
           Task<HtmlString> PartialAsync(string partialViewName, object model, ViewDataDictionary viewData)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Password(System.String, System.Object, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param value: If non-
    <c>null</c>, value to include in the element.
        :type value: System.Object
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Password(string expression, object value, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.RadioButton(System.String, System.Object, System.Nullable<System.Boolean>, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param value: If non-
    <c>null</c>, value to include in the element. Must not be
    <c>null</c> if
    
    <paramref name="isChecked" /> is also
    <c>null</c> and no "checked" entry exists in
    
    <paramref name="htmlAttributes" />.
        :type value: System.Object
        :param isChecked: If
    <c>true</c>, radio button is initially selected. Must not be
    <c>null</c> if
    
    <paramref name="value" /> is also
    <c>null</c> and no "checked" entry exists in
    
    <paramref name="htmlAttributes" />.
        :type isChecked: System.Nullable{System.Boolean}
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString RadioButton(string expression, object value, bool ? isChecked, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Raw(System.Object)
    
        
    
        
        
    
        
        :param value: The [System.Object]() to wrap.
        :type value: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Raw(object value)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Raw(System.String)
    
        
    
        
        
    
        
        :param value: HTML markup [System.String]().
        :type value: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString Raw(string value)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.RenderPartialAsync(System.String, System.Object, Microsoft.AspNet.Mvc.ViewDataDictionary)
    
        
    
        
        
    
        
        :param partialViewName: The name of the partial view used to create the HTML markup. Must not be
    <c>null</c>.
        :type partialViewName: System.String
        :param model: A model to pass into the partial view.
        :type model: System.Object
        :param viewData: A [Microsoft.AspNet.Mvc.ViewDataDictionary](Microsoft.AspNet.Mvc.ViewDataDictionary.yml) to pass into the partial view.
        :type viewData: Microsoft.AspNet.Mvc.ViewDataDictionary
        :rtype: 
    
        
        .. code-block:: csharp
    
           Task RenderPartialAsync(string partialViewName, object model, ViewDataDictionary viewData)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.RouteLink(System.String, System.String, System.String, System.String, System.String, System.Object, System.Object)
    
        
    
        
        
    
        
        :param linkText: The inner text of the anchor element. Must not be
    <c>null</c>.
        :type linkText: System.String
        :param routeName: The name of the route.
        :type routeName: System.String
        :param protocol: The protocol for the URL, such as "http" or "https".
        :type protocol: System.String
        :param hostName: The host name for the URL.
        :type hostName: System.String
        :param fragment: The URL fragment name (the anchor name).
        :type fragment: System.String
        :param routeValues: An [System.Object]() that contains the parameters for a route. The parameters are retrieved through
    reflection by examining the properties of the [System.Object](). This [System.Object]() is typically
    created using [System.Object]() initializer syntax. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the route parameters.
        :type routeValues: System.Object
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString RouteLink(string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.TextArea(System.String, System.String, System.Int32, System.Int32, System.Object)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param value: If non-
    <c>null</c>, value to include in the element.
        :type value: System.String
        :param rows: Number of rows in the textarea.
        :type rows: System.Int32
        :param columns: Number of columns in the textarea.
        :type columns: System.Int32
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString TextArea(string expression, string value, int rows, int columns, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.TextBox(System.String, System.Object, System.String, System.Object)
    
        
    
        
        
    
        
        :param current: Expression name, relative to the current model.
        :type current: System.String
        :param value: If non-
    <c>null</c>, value to include in the element.
        :type value: System.Object
        :param format: The composite format [System.String]() (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).
        :type format: System.String
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the element. Alternatively, an
    [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString TextBox(string current, object value, string format, object htmlAttributes)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ValidationMessage(System.String, System.String, System.Object, System.String)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param message: The message to be displayed. If
    <c>null</c> or empty, method extracts an error string from the
    [Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary]() object. Message will always be visible but client-side validation may
    update the associated CSS class.
        :type message: System.String
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the
    <paramref name="tag" /> element.
    Alternatively, an [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :param tag: The tag to wrap the
    <paramref name="message" /> in the generated HTML. Its default value is
    [Microsoft.AspNet.Mvc.ViewContext.ValidationMessageElement](Microsoft.AspNet.Mvc.ViewContext.yml).
        :type tag: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString ValidationMessage(string expression, string message, object htmlAttributes, string tag)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ValidationSummary(System.Boolean, System.String, System.Object, System.String)
    
        
    
        
        
    
        
        :param excludePropertyErrors: If
    <c>true</c>, display model-level errors only; otherwise display all errors.
        :type excludePropertyErrors: System.Boolean
        :param message: The message to display with the validation summary.
        :type message: System.String
        :param htmlAttributes: An [System.Object]() that contains the HTML attributes for the topmost (&lt;div&gt;) element.
    Alternatively, an [System.Collections.Generic.IDictionary`2]() instance containing the HTML attributes.
        :type htmlAttributes: System.Object
        :param tag: The tag to wrap the
    <paramref name="message" /> in the generated HTML. Its default value is
    [Microsoft.AspNet.Mvc.ViewContext.ValidationSummaryMessageElement](Microsoft.AspNet.Mvc.ViewContext.yml).
        :type tag: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           HtmlString ValidationSummary(bool excludePropertyErrors, string message, object htmlAttributes, string tag)

    .. dn:method:: Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Value(System.String, System.String)
    
        
    
        
        
    
        
        :param expression: Expression name, relative to the current model.
        :type expression: System.String
        :param format: The composite format [System.String]() (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).
        :type format: System.String
        :rtype: 
    
        
        .. code-block:: csharp
    
           string Value(string expression, string format)

